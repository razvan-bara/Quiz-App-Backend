---
info:
    description: Endpoints for the quiz app REST API
    title: Quiz microservice
    version: 1.0.0
produces:
    - application/json
consumes:
    - application/json
    - multipart/form-data
schemes:
    - http
swagger: "2.0"
paths:

    /quizzes:
        get:
            tags:
                - quiz
            operationId: listQuizzes
            responses:
                200:
                    description: list the available quizzes
                    schema:
                        type: array
                        items:
                            $ref: "#/definitions/quizDTO"
                401:
                    $ref: "#/responses/Unauthorized"
                500:
                    $ref: "#/responses/InternalError"
        post:
            tags:
                - quiz
            operationId: addQuiz
            parameters:
                - name: body
                  in: body
                  schema:
                      $ref: "#/definitions/quizForm"
            responses:
                201:
                    description: create quiz
                    schema:
                        $ref: "#/definitions/quizForm"
                401:
                    $ref: "#/responses/Unauthorized"
                500:
                    $ref: "#/responses/InternalError"

    /quizzes/{id}:
            parameters:
                - type: integer
                  name: id
                  in: path
                  description: quiz_id
                  format: int64
                  required: true

            get:
                tags:
                    - quiz
                operationId: getQuiz
                responses:
                    200:
                        description: got quiz
                        schema:
                            $ref: "#/definitions/quizForm"
                    404:
                        $ref: "#/responses/NotFound"
                    401:
                        $ref: "#/responses/Unauthorized"
                    500:
                        $ref: "#/responses/InternalError"

            put:
                tags:
                    - quiz
                operationId: updateQuiz
                parameters:
                    - name: body
                      in: body
                      schema:
                          $ref: "#/definitions/quizForm"
                responses:
                    200:
                        description: update quiz
                        schema:
                            $ref: "#/definitions/quizForm"
                    404:
                        $ref: "#/responses/NotFound"
                    401:
                        $ref: "#/responses/Unauthorized"
                    500:
                        $ref: "#/responses/InternalError"
            delete:
                tags:
                    - quiz
                operationId: deleteQuiz
                responses:
                    204:
                        description: Deleted
                    404:
                        $ref: "#/responses/NotFound"
                    401:
                        $ref: "#/responses/Unauthorized"
                    500:
                        $ref: "#/responses/InternalError"

    /questions/{id}:
        delete:
            tags:
                - question
            parameters:
                - type: integer
                  name: id
                  in: path
                  description: question_id
                  format: int64
                  required: true
            operationId: deleteQuestion
            responses:
                204:
                    description: Deleted question
                404:
                    $ref: "#/responses/NotFound"
                401:
                    $ref: "#/responses/Unauthorized"
                500:
                    $ref: "#/responses/InternalError"

    /answers/{id}:
        delete:
            tags:
                - answer
            operationId: deleteAnswer
            parameters:
                - type: integer
                  name: id
                  in: path
                  description: answer_id
                  format: int64
                  required: true
            responses:
                204:
                    description: Deleted answer
                404:
                    $ref: "#/responses/NotFound"
                401:
                    $ref: "#/responses/Unauthorized"
                500:
                    $ref: "#/responses/InternalError"

    /quizzes/{quizID}/attempts:
        parameters:
            - type: integer
              name: quizID
              in: path
              description: quiz_id
              format: int64
              required: true
        post:
            tags:
                - attempt
            operationId: addAttempt
            parameters:
                - name: attemptDTO
                  in: body
                  schema:
                      $ref: "#/definitions/attemptDTO"
            responses:
                201:
                    description: create attempt
                    schema:
                        $ref: "#/definitions/attemptDTO"
                400:
                    $ref: "#/responses/BadRequest"
                401:
                    $ref: "#/responses/Unauthorized"
                500:
                    $ref: "#/responses/InternalError"

    /quizzes/{quizId}/attempts/{attemptId}/answers:
        parameters:
            - type: integer
              name: quizId
              in: path
              description: quizId
              format: int64
              required: true
            - type: integer
              name: attemptId
              in: path
              description: attemptId
              format: int64
              required: true
        post:
            tags:
                - attempt
            operationId: addAttemptAnswer
            parameters:
                - name: attemptAnswerDTO
                  in: body
                  schema:
                      $ref: "#/definitions/attemptAnswerDTO"
            responses:
                201:
                    description: create attempt answer
                    schema:
                        $ref: "#/definitions/attemptAnswerDTO"
                400:
                    $ref: "#/responses/BadRequest"
                401:
                    $ref: "#/responses/Unauthorized"
                500:
                    $ref: "#/responses/InternalError"


definitions:

    quizForm:
        description: request body matching create quiz form
        type: object
        allOf:
            - $ref: "#/definitions/quizDTO"
            - type: object
              required:
                  - questions
              properties:
                  questions:
                    type: array
                    minItems: 2
                    items:
                        type: object
                        allOf:
                            - $ref: "#/definitions/questionDTO"
                            - type: object
                              required:
                                  - answers
                              properties:
                                answers:
                                    type: array
                                    minItems: 2
                                    items:
                                        $ref: "#/definitions/answerDTO"




    quizDTO:
        type: object
        required:
            - title
        properties:
            ID:
                type: integer
                format: int64
            title:
                type: string
                minLength: 10
            description:
                type: string
            attempts:
                type: integer
                format: int32
            uuid:
                type: string
                format: uuid
            createdAt:
                type: string
                format: date-time

    questionDTO:
        type: object
        required:
            - title
        properties:
            ID:
                type: integer
                format: int64
            title:
                type: string
                minLength: 10
            body:
                type: string
            quizID:
                type: integer
                format: int64
            uuid:
                type: string
                format: uuid
            createdAt:
                type: string
                format: date-time

    principal:
        $ref: "./userSwagger.yml#/definitions/principal"

    answerDTO:
        type: object
        required:
            - title
        properties:
            ID:
                type: integer
                format: int64
            title:
                type: string
                minLength: 5
            correct:
                type: boolean
                default: false
            quizQuestionID:
                type: integer
                format: int64
            uuid:
                type: string
                format: uuid
            createdAt:
                type: string
                format: date-time

    attemptDTO:
        type: object
        properties:
            ID:
                type: integer
                format: int64
                x-nullable: false
            quizId:
                type: integer
                format: int64
                x-nullable: false
            userId:
                type: integer
                format: int64
                x-nullable: false
            status:
                type: integer
                format: int32
                x-nullable: false
            score:
                type: integer
                format: int32
            UUID:
                type: string
                format: uuid
                x-nullable: false
            createdAt:
                type: string
                format: date-time
                x-nullable: false

    attemptAnswerDTO:
        type: object
        properties:
            ID:
                type: integer
                format: int64
                x-nullable: false
            attemptID:
                type: integer
                format: int64
                x-nullable: false
            questionID:
                type: integer
                format: int64
                x-nullable: false
            answerID:
                type: integer
                format: int64
                x-nullable: false
            UUID:
                type: string
                format: uuid
                x-nullable: false
            createdAt:
                type: string
                format: date-time
                x-nullable: false

    error:
        type: object
        required:
            - message
            - code
        properties:
            message:
                type: string
            code:
                type: integer
responses:

    BadRequest:
        description: The request did not meet the requirements
        schema:
            $ref: "#/definitions/error"

    Unauthorized:
        description: Unauthorized to do the request
        schema:
            $ref: "#/definitions/error"

    NotFound:
        description: Resource not found
        schema:
            $ref: "#/definitions/error"

    Forbidden:
        description: Forbidden – you don't have permission to access
        schema:
            $ref: "#/definitions/error"

    InternalError:
        description: Internal server error
        schema:
            $ref: "#/definitions/error"

security:
    - key: [ ]

securityDefinitions:
    key:
        type: apiKey
        in: header
        name: Authorization